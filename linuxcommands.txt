To see if HT is enabled: 
dmidecode -t processor | grep -E '(Core Count|Thread Count)' OR lscpu #look for Thread(s) per core
##################################################################################################
To copy files from remote to local:
scp 132.z.y.x:/home/ruthvik/Desktop/Fullyconnected_Results/default_models/200kImgs/200kweights.eps /home/ruthvik/Desktop
##################################################################################################
To copy from local to remote:
scp /home/ruthvik/Desktop/Focol_Results/Serial_15000_imgs_progress_test_man_12hrs_OFF_roundoff/filters.eps 132.z.y.x:/home/ruthvik/Desktop

if you have a port number then
scp -P /home/ruthvik/Desktop/Focol_Results/Serial_15000_imgs_progress_test_man_12hrs_OFF_roundoff/filters.eps 132.z.y.x:/home/ruthvik/Desktop
##################################################################################################
To connect to remote with username:
ssh rvuser@bridges.psc.edu -p 2222
    "user"@"remote address" -p "port"
##################################################################################################
To connect to VPN:
sudo openconnect bsuvpn-offcampus.boisestate.edu
		 " V P N A d d r e s s"
##################################################################################################
To run PyNN, Neuron, MPI codes use:
mpirun -np 4 ~/neuron/nrn/src/nrniv/nrniv -mpi PySCNN_v22.py

OR
mpirun -np 7 -machinefile ~/mpi_hosts python PySCNN_v22.py
##################################################################################################
###############SOME IMPORTANT THINGS ABOUT RAM/DISK/MEMORY ETC ###################################
To see remaining space on disk(human readable):
df -h
df -T #to see filesystem type also
###########################################################################################
To see total available memory (https://www.linuxatemyram.com/)
free -h
              total        used        free      shared  buff/cache   available
Mem:            62G         19G         31G        419M         11G         42G
Swap:          2.0G        192M        1.8G
in the above table, free=31 and availabel=42 so your system has cached about 11GB of the disk
however you don't need to worry that you only have 31G of RAM because you actually have 42G
and the extra 11G can be freed up on arrival of a new process
###############################################################################################
Interpret ps aux command (https://superuser.com/questions/117913/ps-aux-output-meaning/117921#117921)

    USER = user owning the process
    PID = process ID of the process
    %CPU = It is the CPU time used divided by the time the process has been running.
    %MEM = ratio of the processâ€™s resident set size to the physical memory on the machine
    VSZ = virtual memory usage of entire process (in KiB)
    RSS = resident set size, the non-swapped physical memory that a task has used (in KiB)
    TTY = controlling tty (terminal)
    STAT = multi-character process state
    START = starting time or date of the process
    TIME = cumulative CPU time
    COMMAND = command with all its arguments
RSS is the actual number that we have to worry about
RSS is the amount of physical memory this process is using. Note that this includes any memory that's shared with other processes (eg if other processes are loaded from same executable or libraries) so it may over-report memory usage. VSZ is the size of the virtual memory space - do not be mislead by this as it's not all "used" memory. It includes memory in use (RSS), memory that's swapped, but usually the majority is just additional addressing space that hasn't actually had any real memory allocated to it - in order to use that space, more memory would need to be given to the process.
#################################################################################################
Parsing the output of ps aux to get memory usage for every process (https://superuser.com/questions/398862/linux-find-out-what-process-is-using-all-the-ram)

ps aux | grep <process name> | awk '{sum=sum+$6}; END {print sum/1024 " MB"}'

ruthvik@ruthvik:~/tros_vision$ ps aux | grep python | awk '{sum=sum+$6}; END {print sum/1024 " MB"}'
181.309 MB
ruthvik@ruthvik:~/tros_vision$ ps aux | grep gnome | awk '{sum=sum+$6}; END {print sum/1024 " MB"}'
13137.7 MB
ruthvik@ruthvik:~/tros_vision$ ps aux | grep nautilus | awk '{sum=sum+$6}; END {print sum/1024 " MB"}'
1337.88 MB
##################################################################################################
Freeup RAM(page cache) (https://askubuntu.com/questions/78284/is-there-a-command-that-frees-up-ram)


To free pagecache:

echo 1 > /proc/sys/vm/drop_caches

To free dentries and inodes:

echo 2 > /proc/sys/vm/drop_caches

To free pagecache, dentries and inodes:

echo 3 > /proc/sys/vm/drop_caches

use with root permissions

##################################################################################################
To see a folder size
du -hs /folder
du -sh -- * # lists sizes of all folders in a directory
##################################################################################################
To be able to disown a process started on a remote server, install screen
1. Type screen in the terminal to start a screen
2. To see how many screens are started type, screen -list
3. To connect to a screen type, screen -rd screenID
4. To detach type, crtl+a and ctrl+d
5. To kill a screen type, ctrl+d
6. To increase vim buffer `Ctrl-a + :`  and then type scrollback 1000
https://unix.stackexchange.com/questions/351115/increase-buffer-size-while-running-screen
###################################################################################################
In order to rename a bunch of files in a directory from name_YYMM.csv to name_YYYYMM.csv
use:
ls name* | while read a; do mv $a `echo $a | sed s/name_/name_20/`; done
#####################################################################################################
To untrack and track a file
This will tell git you want to start ignoring the changes to the file
git update-index --assume-unchanged path/to/file

When you want to start keeping track again
git update-index --no-assume-unchanged path/to/file

####################################################################################################
To see hidden/ignored files or to hide or unhide copy the below lines to ~/home/user/.gitconfig file
[user]
    name = username
    email = username@email.com
[alias]
  hide = update-index --assume-unchanged
  unhide = update-index --no-assume-unchanged
  unhide-all = update-index --really-refresh
  #hidden = !git ls-files -v | grep \"^[a-z]\"
  #ignored = !git status -s --ignored | grep \"^!!\"
  parent = "!git show-branch | grep '*' | grep -v \"$(git rev-parse --abbrev-ref HEAD)\" | head -n1 | sed 's/.*\\[\\(.*\\)\\].*/\\1/' | sed 's/[\\^~].*//' #"
  hidden = "!f(){ git -C \"$GIT_PREFIX\" ls-files -v \"$@\" | grep \"^[a-z]\";}; f"
  ignored = "!f(){ git -C \"$GIT_PREFIX\" status -s --ignored \"$@\" | grep \"^!!\";}; f"
#################################################################################################
To create a branch in local git repo and push it to remote
	git checkout -b 'branch name'
To check the branch you're working in
	git branch
To switch between bracnhes
	git switch or git checkout 'branch name'
To push the local branch to remote
	git push --set-upstream origin optimization
	 git push origin 'branch name'
###################################################################################################
Create a .vimrc file in /home/user/ with this settings to code in python
set columns=120
set tabstop=4
set shiftwidth=4
set softtabstop=4
set autoindent
set smarttab
set number
set paste
filetype indent on
filetype on
filetype plugin on
#################################################################################################
Checking File Sizes

ls -l filename /* Size of the file*/
ls -l *        /* Size of All the files in the current directory */
ls -al *       /* Size of All the files including hidden files in the current directory */
ls -al dir/    /* Size of All the files including hidden files in the 'dir' di

Including -h option in any of the above commands (for Ex: ls -lh * or du -sh) will give you size in human readable format (kb, mb,gb, ...)
##################################################################################################
Comment multiple line in Vim:
1.Ctrl-v
2. slect number of lines you want by pressing h, j, k and l to move left, down, up, right respectively)
3.Shift-I
4. Press '#' and then press Esc. Comments will showup in a moment.
######################################################################################################
vim replace a word 
yw - yanks a word
vep - replaces a word with previosuly yanked word
https://unix.stackexchange.com/questions/88714/how-can-i-do-a-change-word-in-vim-using-the-current-paste-buffer
###################################################################################################
Delete multiple lines in vim:
Method 1:
Press 'Number of lines to be deleted' dd, e:g= 5dd deletes 5 lines below the cursor including the present line.

Method 2: (useful when you dont know how many to delete)
1.Shift-v (selects whole line)
2.slect number of lines you want by pressing h, j, k and l to move left, down, up, right respectively)
3.d
####################################################################################################
Set numbers in vim and other misc sets:
1. :set number (:set nonumber, to remove numbers)
2. :set paste(doesn't messup indentation when pasting)
3. :set hls (:set nohls, to remove highlighting of searched words)

######################################################################################################
change ownership of files on Linux
sudo chown -R ruthvik spiking-cnns # here user ruthvik will own spiking-cnns

######################################################################################################
replace a word in vim
:%s/old_word/new_word/g   -- replace all
:6,10s/old_word/new_word/g   -- replace line 6 to line 10
:%s/old_word/new_word/gc   -- replace with confirmaion

#######################################################################################################
To see which processes are using swap
smem -s swap -r
########################################################################################################
To browse files to be opened in vim
:e.
########################################################################################################
To see the details of RAM
sudo lshw -class memory 
########################################################################################################
If you have 2 versions of pip and want to use say, pip for python 3 then try:
sudo python3 -m pip install --user 'packagename'
#########################################################################################################
to track only certain type of files in a git folder create a `.gitignore` file with below contents
*
!*[.c,.h,.ipynb] ## .c is the file extension here, it can be.py or .h or any other extension
##########################################################################################################
Suppose you start a program and later you start another program that results in swapping and if you cancel the
later program the first one will be swapped and it will run extremely slow. To see if anything is being swapped
use the command 

vmstat ## see si/so to see if something is being swapped.
sudo swapoff -a; sudo swapon -a ## this will copy everything from swap to RAM, make sure you have enough RAM.

Use this code to see which process is using SWAP
#!/bin/bash

    # find-out-what-is-using-your-swap.sh
    # -- Get current swap usage for all running processes
    # --
    # -- rev.0.3, 2012-09-03, Jan Smid          - alignment and intendation, sorting
    # -- rev.0.2, 2012-08-09, Mikko Rantalainen - pipe the output to "sort -nk3" to get sorted output
    # -- rev.0.1, 2011-05-27, Erik Ljungstrom   - initial version


SCRIPT_NAME=`basename $0`;
SORT="kb";                 # {pid|kB|name} as first parameter, [default: kb]
[ "$1" != "" ] && { SORT="$1"; }

[ ! -x `which mktemp` ] && { echo "ERROR: mktemp is not available!"; exit; }
MKTEMP=`which mktemp`;
TMP=`${MKTEMP} -d`;
[ ! -d "${TMP}" ] && { echo "ERROR: unable to create temp dir!"; exit; }

>${TMP}/${SCRIPT_NAME}.pid;
>${TMP}/${SCRIPT_NAME}.kb;
>${TMP}/${SCRIPT_NAME}.name;

SUM=0;
OVERALL=0;
    echo "${OVERALL}" > ${TMP}/${SCRIPT_NAME}.overal;

for DIR in `find /proc/ -maxdepth 1 -type d -regex "^/proc/[0-9]+"`;
do
    PID=`echo $DIR | cut -d / -f 3`
    PROGNAME=`ps -p $PID -o comm --no-headers`

    for SWAP in `grep Swap $DIR/smaps 2>/dev/null| awk '{ print $2 }'`
    do
        let SUM=$SUM+$SWAP
    done

    if (( $SUM > 0 ));
    then
        echo -n ".";
        echo -e "${PID}\t${SUM}\t${PROGNAME}" >> ${TMP}/${SCRIPT_NAME}.pid;
        echo -e "${SUM}\t${PID}\t${PROGNAME}" >> ${TMP}/${SCRIPT_NAME}.kb;
        echo -e "${PROGNAME}\t${SUM}\t${PID}" >> ${TMP}/${SCRIPT_NAME}.name;
    fi
    let OVERALL=$OVERALL+$SUM
    SUM=0
done
echo "${OVERALL}" > ${TMP}/${SCRIPT_NAME}.overal;
echo;
let KB=1024
echo "Overall swap used: $(($OVERALL/($KB*$KB))) GB";
echo "Overall swap used: ${OVERALL} kb";
echo "========================================";
case "${SORT}" in
    name )
        echo -e "name\tkB\tpid";
        echo "========================================";
        cat ${TMP}/${SCRIPT_NAME}.name|sort -r;
        ;;

    kb )
        echo -e "kB\tpid\tname";
        echo "========================================";
        cat ${TMP}/${SCRIPT_NAME}.kb|sort -rh;
        ;;

    pid | * )
        echo -e "pid\tkB\tname";
        echo "========================================";
        cat ${TMP}/${SCRIPT_NAME}.pid|sort -rh;
        ;;
esac
rm -fR "${TMP}/";
##############################################################################################################
					JUPYTER+VIRTUALENV+TENSORFLOW
##############################################################################################################
INSTALL VIRTUAL ENV

$ sudo pip install -U virtualenv  # system-wide install

CREATE A NEW VIRTUAL ENV

$ virtualenv --no-site-packages -p python2.7 ./TF_venv_v1 
use the above line if you want to create a fresh enviroment which

$ virtualenv --system-site-packages -p python2.7 ./TF_venv_v1

otherwise but this line defeats the purpose of virtual env

INSTALL TENSORFLOW

$ source ./tf_venv_v1/bin/activate

# From within the virtual environment. 

$ pip install --upgrade pip

$ pip install --upgrade tensorflow

$ python -c "import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))"


INSTALL JUPYTER NOTEBOOK

$ pip install jupyter

$ ipython kernel install --user --name=TF_venv_v1

$ jupyter-notebook

#you should be able to toggle the kernel in the jupyter notebook.

Sources:
https://www.tensorflow.org/install/pip?lang=python2
https://stackoverflow.com/questions/42449814/running-jupyter-notebook-in-a-virtualenv-installed-sklearn-module-not-available
(answer by the user C.Feng)
#######################################################################################################################
ACCESS FILES FROM WINDOWS SHARE ON LINUX
(https://unix.stackexchange.com/questions/118115/cant-mount-samba-share/118153#118153?newreg=69043e941dee4e9dbcc79a8c90e3adab)
smbclient '\\IP\folder' -U domain\\user
>cd 'directory your file's in'
>prompt
>mget filename
#######################################################################################################################
MOUNT A WINDOWS SHARE ON NAUTILUS USING GUI
Enter the below lines in the `Other Locations` tab
smb://IPaddress/folder/

CD ING INTO A NAUTILUS MOUNTED WINDOWS SHARE
cd /run/user/USERNAME/gvfs/
####################################################################################################################
TO CHECK THE VERSION OF THE CUDA COMPILER
$nvcc -version

$ cat /usr/local/cuda/version.txt 

TO CHECK THE VERSION OF THE CUDNN
cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2
or
cat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2
TO CHECK THE VERSION OF THE NVIDIA GRAPHICS
$nvidia-smi AND 
https://www.tensorflow.org/install/source#tested_build_configurations
####################################################################################################################
TO INSTALL NBEXTENSION ON NOTEBOOK
https://stackoverflow.com/questions/49647705/jupyter-nbextensions-does-not-appear/50663099

pip install --user jupyter_contrib_nbextensions
jupyter contrib nbextension install --user
jupyter nbextension enable spellchecker/main
jupyter nbextension enable codefolding/main

TO CONVERT A .IPYNB FILE TO EMBEDDED HTML WITH TOC
jupyter nbconvert --to html_toc --ExtractOutputPreprocessor.enabled=False FILE
jupyter nbconvert --to html_toc FILE
######################################################################################################################
TO UNSTAGE A FILE THAT IS 'git add'ed
git reset -- <FILENAME>
#######################################################################################################################
LIST FOLDERS THAT CONTAIN MORE THAN 148 FILE
find . -maxdepth 1 -type d -exec bash -c "echo -ne '{} '; ls '{}' | wc -l" \; |   awk '$NF>=148'
########################################################################################################################
LIST TOP 20 PROCESSES THAT ARE USING UP THE MOST RAM
ps aux | awk '{print $2, $4, $11}' | sort -k2rn | head -n 20
#########################################################################################################################
dpkg-apt-remove-purge-list-commands
##########################################################################################################################
# list all the versions of a package in apt
apt list | grep -i "package"

# list all the package installed locally
apt list --installed | grep -i "package"


# remove a package
sudo apt purge "package"*

# uninstall a package 
sudo apt autoremove

# list all the package 
dpkg-query -l | grep -i cuda

# purge a packge from dpkg
dpkg-query -l | grep -i "package" | awk '{print $2}' | xargs sudo dpkg --purge

# remove a packge
sudo dpkg -r "package"
##########################################################################################################################
check if cuda installation went well
###########################################################################################################################
#include <cassert>

#define N 3

__global__ void inc(int *a) {
    int i = blockIdx.x;
    if (i<N) {
        a[i]++;
    }
}

int main() {
    int ha[N], *da;
    cudaMalloc((void **)&da, N*sizeof(int));
    for (int i = 0; i<N; ++i) {
        ha[i] = i;
    }
    cudaMemcpy(da, ha, N*sizeof(int), cudaMemcpyHostToDevice);
    inc<<<N, 1>>>(da);
    cudaMemcpy(ha, da, N*sizeof(int), cudaMemcpyDeviceToHost);
    for (int i = 0; i < N; ++i) {
        assert(ha[i] == i + 1);
    }
    cudaFree(da);
    return 0;
}

nvcc -o 'main.out' 'main.cu'
./main.out
############################################################################################################################
Log the output of terminal to a file and show in the terminal
https://askubuntu.com/questions/420981/how-do-i-save-terminal-output-to-a-file
############################################################################################################################
command | tee -a output.txt
######################################################################################################################
commands to hold a package from upgrading to prevent breaking
 sudo apt-mark hold 'package name1" "package name2"
 apt-mark showhold
 #######################################################################################################################
Checkout from a pull request
https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/checking-out-pull-requests-locally
git fetch origin pull/ID/head:BRANCHNAME
git checkout BRANCHNAME
######################################################################################################################
Check if GPU is detected (without drivers)
lspci -v | grep "VGA controller"
#######################################################################################################################
Caching a github password
https://docs.github.com/en/github/using-git/caching-your-github-credentials-in-git
###########################################################################################################################
Check if one git branch is ahead of another
https://stackoverflow.com/questions/51475525/check-if-a-git-branch-is-ahead-of-another-using-a-script
git log branch2..branch1
####################################################################################################################
Rename many files at once
https://stackoverflow.com/questions/7450818/rename-all-files-in-directory-from-filename-h-to-filename-half
rename 's/stringtoremove.png/stringtoadd.png/' *.png
###################################################################################################################
Kill a zomby process taking space in GPU
sudo fuser -v /dev/nvidia*
And then use htop to Filter(F4) and Sort (Shift+>) accordingly to kill the process in htop F9. 
###################################################################################################################
list all the folders in a path that starts with a string
ls -l "path" | grep "^d" | grep "string"
https://stackoverflow.com/questions/14352290/listing-only-directories-using-ls-in-bash (see answer by lacostenycoder)
ls -l "path" | grep "^d" | awk '{print $9}' | grep "string"

same for files and fodlers

ls -l "path" | grep "string"
#from within the same folder
ls -1 -d */ | grep "string" | cut -f1 -d'/'
###############################################################################################################
vim replace a word
vep or use visual mode and yank the work and then go to the word that needs to deleted and use visual mode again.
https://unix.stackexchange.com/questions/88714/how-can-i-do-a-change-word-in-vim-using-the-current-paste-buffer
####################################################################################################################
Visualize .csv files on terminal
https://chrisjean.com/view-csv-data-from-the-command-line/
cat file.csv | sed -e 's/,,/, ,/g' | column -s, -t | less -#5 -N -S
###########################################################################################################
