To see if HT is enabled: 
dmidecode -t processor | grep -E '(Core Count|Thread Count)' OR lscpu #look for Thread(s) per core
##################################################################################################
To copy files from remote to local:
scp 132.z.y.x:/home/ruthvik/Desktop/Fullyconnected_Results/default_models/200kImgs/200kweights.eps /home/ruthvik/Desktop
##################################################################################################
To copy from local to remote:
scp /home/ruthvik/Desktop/Focol_Results/Serial_15000_imgs_progress_test_man_12hrs_OFF_roundoff/filters.eps 132.z.y.x:/home/ruthvik/Desktop

if you have a port number then
scp -P /home/ruthvik/Desktop/Focol_Results/Serial_15000_imgs_progress_test_man_12hrs_OFF_roundoff/filters.eps 132.z.y.x:/home/ruthvik/Desktop
##################################################################################################
To connect to remote with username:
ssh rvuser@bridges.psc.edu -p 2222
    "user"@"remote address" -p "port"
##################################################################################################
To connect to VPN:
sudo openconnect bsuvpn-offcampus.boisestate.edu
		 " V P N A d d r e s s"
##################################################################################################
To run PyNN, Neuron, MPI codes use:
mpirun -np 4 ~/neuron/nrn/src/nrniv/nrniv -mpi PySCNN_v22.py

OR
mpirun -np 7 -machinefile ~/mpi_hosts python PySCNN_v22.py
##################################################################################################
To see remaining space on disk(human readable):
df -h
df -T #to see filesystem type also
##################################################################################################
To see a folder size
du -hs /folder
du -sh -- * # lists sizes of all folders in a directory
##################################################################################################
To be able to disown a process started on a remote server, install screen
1. Type screen in the terminal to start a screen
2. To see how many screens are started type, screen -list
3. To connect to a screen type, screen -rd screenID
4. To detach type, crtl+a and ctrl+d
5. To kill a screen type, ctrl+d
###################################################################################################
In order to rename a bunch of files in a directory from name_YYMM.csv to name_YYYYMM.csv
use:
ls name* | while read a; do mv $a `echo $a | sed s/name_/name_20/`; done
#####################################################################################################
To untrack and track a file
This will tell git you want to start ignoring the changes to the file
git update-index --assume-unchanged path/to/file

When you want to start keeping track again
git update-index --no-assume-unchanged path/to/file

####################################################################################################
To see hidden/ignored files or to hide or unhide copy the below lines to ~/home/user/.gitconfig file
[user]
    name = username
    email = username@email.com
[alias]
  hide = update-index --assume-unchanged
  unhide = update-index --no-assume-unchanged
  unhide-all = update-index --really-refresh
  #hidden = !git ls-files -v | grep \"^[a-z]\"
  #ignored = !git status -s --ignored | grep \"^!!\"

  hidden = "!f(){ git -C \"$GIT_PREFIX\" ls-files -v \"$@\" | grep \"^[a-z]\";}; f"
  ignored = "!f(){ git -C \"$GIT_PREFIX\" status -s --ignored \"$@\" | grep \"^!!\";}; f"
#################################################################################################
To create a branch in local git repo and push it to remote
	git checkout -b 'branch name'
To check the branch you're working in
	git branch
To switch between bracnhes
	git switch or git checkout 'branch name'
To push the local branch to remote
	git push --set-upstream origin optimization
	 git push origin 'branch name'
###################################################################################################
Create a .vimrc file in /home/user/ with this settings to code in python
set columns=120
set tabstop=4
set shiftwidth=4
set softtabstop=4
set autoindent
set smarttab
set number
set paste
filetype indent on
filetype on
filetype plugin on
#################################################################################################
Checking File Sizes

ls -l filename /* Size of the file*/
ls -l *        /* Size of All the files in the current directory */
ls -al *       /* Size of All the files including hidden files in the current directory */
ls -al dir/    /* Size of All the files including hidden files in the 'dir' di

Including -h option in any of the above commands (for Ex: ls -lh * or du -sh) will give you size in human readable format (kb, mb,gb, ...)
##################################################################################################
Comment multiple line in Vim:
1.Ctrl-v
2. slect number of lines you want by pressing h, j, k and l to move left, down, up, right respectively)
3.Shift-I
4. Press '#' and then press Esc. Comments will showup in a moment.
###################################################################################################
Delete multiple lines in vim:
Method 1:
Press 'Number of lines to be deleted' dd, e:g= 5dd deletes 5 lines below the cursor including the present line.

Method 2: (useful when you dont know how many to delete)
1.Shift-v (selects whole line)
2.slect number of lines you want by pressing h, j, k and l to move left, down, up, right respectively)
3.d
####################################################################################################
Set numbers in vim and other misc sets:
1. :set number (:set nonumber, to remove numbers)
2. :set paste(doesn't messup indentation when pasting)
3. :set hls (:set nohls, to remove highlighting of searched words)

######################################################################################################
change ownership of files on Linux
sudo chown -R ruthvik spiking-cnns # here user ruthvik will own spiking-cnns

######################################################################################################
replace a word in vim
:%s/old_word/new_word/g   -- replace all
:6,10s/old_word/new_word/g   -- replace line 6 to line 10
:%s/old_word/new_word/gc   -- replace with confirmaion

#######################################################################################################
To see which processes are using swap
smem -s swap -r
########################################################################################################
To browse files to be opened in vim
:e.
########################################################################################################
To see the details of RAM
sudo lshw -class memory 
########################################################################################################
If you have 2 versions of pip and want to use say, pip for python 3 then try:
sudo python3 -m pip install --user 'packagename'
#########################################################################################################
to track only certain type of files in a git folder create a `.gitignore` file with below contents
*
!*[.c,.h,.ipynb] ## .c is the file extension here, it can be.py or .h or any other extension
##########################################################################################################
Suppose you start a program and later you start another program that results in swapping and if you cancel the
later program the first one will be swapped and it will run extremely slow. To see if anything is being swapped
use the command 

vmstat ## see si/so to see if something is being swapped.
sudo swapoff -a; sudo swapon -a ## this will copy everything from swap to RAM, make sure you have enough RAM.

Use this code to see which process is using SWAP
#!/bin/bash

    # find-out-what-is-using-your-swap.sh
    # -- Get current swap usage for all running processes
    # --
    # -- rev.0.3, 2012-09-03, Jan Smid          - alignment and intendation, sorting
    # -- rev.0.2, 2012-08-09, Mikko Rantalainen - pipe the output to "sort -nk3" to get sorted output
    # -- rev.0.1, 2011-05-27, Erik Ljungstrom   - initial version


SCRIPT_NAME=`basename $0`;
SORT="kb";                 # {pid|kB|name} as first parameter, [default: kb]
[ "$1" != "" ] && { SORT="$1"; }

[ ! -x `which mktemp` ] && { echo "ERROR: mktemp is not available!"; exit; }
MKTEMP=`which mktemp`;
TMP=`${MKTEMP} -d`;
[ ! -d "${TMP}" ] && { echo "ERROR: unable to create temp dir!"; exit; }

>${TMP}/${SCRIPT_NAME}.pid;
>${TMP}/${SCRIPT_NAME}.kb;
>${TMP}/${SCRIPT_NAME}.name;

SUM=0;
OVERALL=0;
    echo "${OVERALL}" > ${TMP}/${SCRIPT_NAME}.overal;

for DIR in `find /proc/ -maxdepth 1 -type d -regex "^/proc/[0-9]+"`;
do
    PID=`echo $DIR | cut -d / -f 3`
    PROGNAME=`ps -p $PID -o comm --no-headers`

    for SWAP in `grep Swap $DIR/smaps 2>/dev/null| awk '{ print $2 }'`
    do
        let SUM=$SUM+$SWAP
    done

    if (( $SUM > 0 ));
    then
        echo -n ".";
        echo -e "${PID}\t${SUM}\t${PROGNAME}" >> ${TMP}/${SCRIPT_NAME}.pid;
        echo -e "${SUM}\t${PID}\t${PROGNAME}" >> ${TMP}/${SCRIPT_NAME}.kb;
        echo -e "${PROGNAME}\t${SUM}\t${PID}" >> ${TMP}/${SCRIPT_NAME}.name;
    fi
    let OVERALL=$OVERALL+$SUM
    SUM=0
done
echo "${OVERALL}" > ${TMP}/${SCRIPT_NAME}.overal;
echo;
let KB=1024
echo "Overall swap used: $(($OVERALL/($KB*$KB))) GB";
echo "Overall swap used: ${OVERALL} kb";
echo "========================================";
case "${SORT}" in
    name )
        echo -e "name\tkB\tpid";
        echo "========================================";
        cat ${TMP}/${SCRIPT_NAME}.name|sort -r;
        ;;

    kb )
        echo -e "kB\tpid\tname";
        echo "========================================";
        cat ${TMP}/${SCRIPT_NAME}.kb|sort -rh;
        ;;

    pid | * )
        echo -e "pid\tkB\tname";
        echo "========================================";
        cat ${TMP}/${SCRIPT_NAME}.pid|sort -rh;
        ;;
esac
rm -fR "${TMP}/";
##############################################################################################################
					JUPYTER+VIRTUALENV+TENSORFLOW
##############################################################################################################
INSTALL VIRTUAL ENV

$ sudo pip install -U virtualenv  # system-wide install

CREATE A NEW VIRTUAL ENV

$ virtualenv --no-site-packages -p python2.7 ./TF_venv_v1 
use the above line if you want to create a fresh enviroment which

$ virtualenv --system-site-packages -p python2.7 ./TF_venv_v1

otherwise but this line defeats the purpose of virtual env

INSTALL TENSORFLOW

$ source ./tf_venv_v1/bin/activate


$ pip install --upgrade pip

$ pip install --upgrade tensorflow

$ python -c "import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))"


INSTALL JUPYTER NOTEBOOK

$ pip install jupyter

$ ipython kernel install --user --name=TF_venv_v1

$ jupyter-notebook

#you should be able to toggle the kernel in the jupyter notebook.

Sources:
https://www.tensorflow.org/install/pip?lang=python2
https://stackoverflow.com/questions/42449814/running-jupyter-notebook-in-a-virtualenv-installed-sklearn-module-not-available
(answer by the user C.Feng)
#######################################################################################################################
ACCESS FILES FROM WINDOWS SHARE ON LINUX
(https://unix.stackexchange.com/questions/118115/cant-mount-samba-share/118153#118153?newreg=69043e941dee4e9dbcc79a8c90e3adab)
smbclient '\\IP\folder' -U domain\\user
>cd 'directory your file's in'
>prompt
>mget filename
#######################################################################################################################
MOUNT A WINDOWS SHARE ON NAUTILUS USING GUI
Enter the below lines in the `Other Locations` tab
smb://IPaddress/folder/

CD ING INTO A NAUTILUS MOUNTED WINDOWS SHARE
cd /run/user/USERNAME/gvfs/
####################################################################################################################
TO CHECK THE VERSION OF THE CUDA COMPILER
$nvcc -version
TO CHECK THE VERSION OF THE CUDNN
cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2
or
cat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2
TO CHECK THE VERSION OF THE NVIDIA GRAPHICS
$nvidia-smi AND 
https://www.tensorflow.org/install/source#tested_build_configurations
####################################################################################################################
TO INSTALL NBEXTENSION ON NOTEBOOK
pip install jupyter_contrib_nbextensions

TO CONVERT A .IPYNB FILE TO EMBEDDED HTML WITH TOC
jupyter nbconvert --to html_toc --ExtractOutputPreprocessor.enabled=False FILE
jupyter nbconvert --to html_toc FILE
######################################################################################################################
TO UNSTAGE A FILE THAT IS 'git add'ed
git reset -- <FILENAME>
#######################################################################################################################
